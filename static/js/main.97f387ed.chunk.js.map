{"version":3,"sources":["Board.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","todos","props","map","el","title","type","App","initialState","done","todo","action","payload","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAeA,IAIeA,eAJS,SAACC,GAAD,MAAY,CAChCC,MAAOD,EAAMC,SAGuB,KAAzBF,EAff,SAAeG,GAAQ,IACZD,EAASC,EAATD,MACT,OACE,6BACKA,EAAME,KAAI,SAAAC,GAAE,OAAI,4BAAKA,EAAGC,UACzB,2BAAOC,KAAK,SACZ,4CCEOC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,Q,8BCPAC,EAAe,CACjBP,MAAO,CACH,CACII,MAAO,aACPI,MAAM,GACP,CACCJ,MAAO,cACPI,MAAM,KAmBHC,EAdF,WAAmC,IAAlCV,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAC3C,OAAQA,EAAOL,MAEX,IAAK,WACD,OAAO,2BACAN,GADP,IAEIC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmB,CAAEI,MAAOM,EAAOC,QAASH,MAAM,OAG/D,QACI,OAAOT,ICdJa,EAJDC,sBAAYJ,EAAMK,8BAC5BC,8BCEJC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,QAGVO,SAASC,eAAe,U","file":"static/js/main.97f387ed.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\n\nfunction Board(props) {\n    const {todos} = props\n  return (\n    <div>\n        {todos.map(el => <li>{el.title}</li>)}\n        <input type=\"text\"/>\n        <button>Push</button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    todos: state.todos\n});\n\nexport default connect(mapStateToProps, null)(Board);\n","import React from 'react';\nimport './App.css';\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    todos: [\r\n        {\r\n            title: 'First todo',\r\n            done: true,\r\n        }, {\r\n            title: 'Second todo',\r\n            done: false,\r\n        }\r\n    ]\r\n};\r\n\r\nconst todo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'TODO_ADD':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, { title: action.payload, done: false }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todo;\r\n","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport todo from './reducer';\r\n\r\nconst store = createStore(todo, composeWithDevTools(\r\n    applyMiddleware(),\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}