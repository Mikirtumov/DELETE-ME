{"version":3,"sources":["Board.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","todos","dispatch","addTodo","todo","type","payload","props","useState","newTodo","setNewTodo","map","el","key","id","title","value","onChange","e","target","onClick","App","initialState","done","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA2BA,IAQeA,eARS,SAACC,GAAD,MAAY,CAChCC,MAAOD,EAAMC,UAGU,SAACC,GAAD,MAAe,CACtCC,QAAS,SAACC,GAAD,OAAUF,EAAS,CAAEG,KAAM,WAAYC,QAASF,QAG9CL,EA/Bf,SAAeQ,GAAQ,IAEZN,EAAkBM,EAAlBN,MAAOE,EAAWI,EAAXJ,QAFI,EAIYK,mBAAS,IAJrB,mBAIXC,EAJW,KAIFC,EAJE,KAWpB,OACE,6BACKT,EAAMU,KAAI,SAAAC,GAAE,OAAI,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGG,UACrC,2BACIC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAWQ,EAAEC,OAAOH,QACrCX,KAAK,SACT,4BAAQe,QAZa,WACrBjB,EAAQM,GACRC,EAAW,MAUX,YCVOW,MARf,WACE,OACE,6BACE,kBAAC,EAAD,Q,8BCPAC,EAAe,CACjBrB,MAAO,CACH,CACIc,MAAO,aACPQ,MAAM,EACNT,GAAI,GACL,CACCC,MAAO,cACPQ,MAAM,EACNT,GAAI,KAmBDV,EAdF,WAAmC,IAAlCJ,EAAiC,uDAAzBsB,EAAcE,EAAW,uCAC3C,OAAQA,EAAOnB,MAEX,IAAK,WACD,OAAO,2BACAL,GADP,IAEIC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmB,CAAEc,MAAOS,EAAOlB,QAASiB,MAAM,OAG/D,QACI,OAAOvB,IChBJyB,EAJDC,sBAAYtB,EAAMuB,8BAC5BC,8BCEJC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,QAGVO,SAASC,eAAe,W","file":"static/js/main.059187c1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\n\nfunction Board(props) {\n\n    const {todos, addTodo} = props\n\n    const [newTodo, setNewTodo] = useState('');\n\n    const addButtonHandler = () => {\n        addTodo(newTodo)\n        setNewTodo('')\n    }\n\n  return (\n    <div>\n        {todos.map(el => <li key={el.id}>{el.title}</li>)}\n        <input\n            value={newTodo}\n            onChange={(e) => setNewTodo(e.target.value)}\n            type=\"text\"/>\n        <button onClick={addButtonHandler}>Push</button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    addTodo: (todo) => dispatch({ type: 'TODO_ADD', payload: todo })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport './App.css';\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    todos: [\r\n        {\r\n            title: 'First todo',\r\n            done: true,\r\n            id: 1,\r\n        }, {\r\n            title: 'Second todo',\r\n            done: false,\r\n            id: 2,\r\n        }\r\n    ]\r\n};\r\n\r\nconst todo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'TODO_ADD':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, { title: action.payload, done: false }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todo;\r\n","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport todo from './reducer';\r\n\r\nconst store = createStore(todo, composeWithDevTools(\r\n    applyMiddleware(),\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}