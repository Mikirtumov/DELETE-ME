{"version":3,"sources":["Board.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","state","todos","dispatch","addTodo","todo","type","payload","delTodos","taskId","props","useState","newTodo","setNewTodo","className","map","el","key","id","title","onClick","value","onChange","e","target","App","initialState","done","action","filter","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA+BA,IASeA,eATS,SAACC,GAAD,MAAY,CAChCC,MAAOD,EAAMC,UAGU,SAACC,GAAD,MAAe,CACtCC,QAAS,SAACC,GAAD,OAAUF,EAAS,CAAEG,KAAM,WAAYC,QAASF,KACzDG,SAAU,SAACC,GAAD,OAAYN,EAAS,CAAEG,KAAM,WAAYC,QAASE,QAGjDT,EApCf,SAAeU,GAAQ,IAEZR,EAA4BQ,EAA5BR,MAAOE,EAAqBM,EAArBN,QAASI,EAAYE,EAAZF,SAFL,EAIYG,mBAAS,IAJrB,mBAIXC,EAJW,KAIFC,EAJE,KAWpB,OACE,yBAAKC,UAAU,OACVZ,EAAMa,KAAI,SAAAC,GAAE,OAAI,wBAAIC,IAAKD,EAAGE,IACxBF,EAAGG,MACJ,4BAAQC,QAAS,kBAAMZ,EAASQ,EAAGE,MAAnC,WAGJ,2BACIG,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAWU,EAAEC,OAAOH,QACrCf,KAAK,SACT,4BAAQc,QAhBa,WACrBhB,EAAQQ,GACRC,EAAW,MAcX,YCdOY,MARf,WACE,OACE,6BACE,kBAAC,EAAD,Q,8BCPAC,EAAe,CACjBxB,MAAO,CACH,CACIiB,MAAO,aACPQ,MAAM,EACNT,GAAI,GACL,CACCC,MAAO,cACPQ,MAAM,EACNT,GAAI,KAwBDb,EAnBF,WAAmC,IAAlCJ,EAAiC,uDAAzByB,EAAcE,EAAW,uCAC3C,OAAQA,EAAOtB,MAEX,IAAK,WACD,OAAO,2BACAL,GADP,IAEIC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmB,CAAEiB,MAAOS,EAAOrB,QAASoB,MAAM,OAE/D,IAAK,WACD,IAAMnB,EAAWP,EAAMC,MAAM2B,QAAO,SAAAb,GAAE,OAAIA,EAAGE,KAAOU,EAAOrB,WAC3D,OAAO,2BACAN,GADP,IAEIC,MAAOM,IAEf,QACI,OAAOP,ICrBJ6B,EAJDC,sBAAY1B,EAAM2B,8BAC5BC,8BCEJC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,QAGVO,SAASC,eAAe,W","file":"static/js/main.81928045.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\n\nfunction Board(props) {\n\n    const {todos, addTodo, delTodos} = props\n\n    const [newTodo, setNewTodo] = useState('');\n\n    const addButtonHandler = () => {\n        addTodo(newTodo)\n        setNewTodo('')\n    }\n\n  return (\n    <div className='App'>\n        {todos.map(el => <li key={el.id}>\n            {el.title}\n            <button onClick={() => delTodos(el.id)}>Del</button>\n\n        </li>)}\n        <input\n            value={newTodo}\n            onChange={(e) => setNewTodo(e.target.value)}\n            type=\"text\"/>\n        <button onClick={addButtonHandler}>Push</button>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    addTodo: (todo) => dispatch({ type: 'TODO_ADD', payload: todo }),\n    delTodos: (taskId) => dispatch({ type: 'TODO_DEL', payload: taskId }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport './App.css';\nimport Board from \"./Board\";\n\nfunction App() {\n  return (\n    <div>\n      <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    todos: [\r\n        {\r\n            title: 'First todo',\r\n            done: true,\r\n            id: 1,\r\n        }, {\r\n            title: 'Second todo',\r\n            done: false,\r\n            id: 2,\r\n        }\r\n    ]\r\n};\r\n\r\nconst todo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'TODO_ADD':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, { title: action.payload, done: false }]\r\n            };\r\n        case 'TODO_DEL':\r\n            const delTodos = state.todos.filter(el => el.id !== action.payload)\r\n            return {\r\n                ...state,\r\n                todos: delTodos\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todo;\r\n","import { createStore, applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport todo from './reducer';\r\n\r\nconst store = createStore(todo, composeWithDevTools(\r\n    applyMiddleware(),\r\n));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}